TODO FILE:

Gameplay:
TODO: item/powerup drops: Shield, weapon upgrade, diff ship, lives?
TODO: special item/upgrades to clear field between "stages"?
TODO: multiple "stages" with different variety enemies
TODO: add item drop: change of player ship(req weapon reset?)
TODO: variety of enemy ships(diff ships=diff speeds/bullets)
TODO: extra lives, and display thereof
TODO: implement diff patterns for bullets/enemies to follow based on type
TODO: more predictable enemy spawning algorithm
TODO: Boss enemies?
TODO: end of stage, stage transition
TODO: energy bar for a special weapon(right click?)
TODO: Track/display high score; local db/file to store

Graphics/sound:
TODO: animations upon collisions
TODO: sounds - weapons, ship-ship collision, weapon-ship collision
TODO: scrolling background, presenting movement/progression
TODO: boundaries to player ship: prevent moving off-screen to safety?

Controls:
TODO: keyboard/controller control compatibility
TODO: autofire functionality has broken click-compatibility.

Menus:
TODO: Main menu, stage selection
TODO: PAUSE menu
TODO: game_over() continue/exit buttons
TODO: game_over options button
TODO: options menu: adjust music/sound vols w/ sliders/mute chkbox

Misc:
TODO: metrics, enemies/s spawned/destroyed, pts/s earned.
TODO: port to earlier python version(?) for compilation/easier install


DONE: S_Picture: implement health pools for enemies, bullets
DONE: bullet class: add bullet_type, owner(player/enemy), spawn_point
DONE: extend player_bullet class into general bullet class.
DONE: autofire functionality when holding button
DONE: proper enemy size-specific placement # accidentally via collision.
DONE: make collision system pixel perfect.
DONE: randomly generate enemies
DONE: rather than clearing screen on game_over, freezeframe?
DONE: weapons fire/collision thereof.
DONE: ships displayed/rendered
DONE: score displayed
DONE: death/game over condition
